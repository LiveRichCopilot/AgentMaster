{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///Users/liverichmedia/Agent%20master%20/genesis-agent/cortex-chat-ui/src/components/AgentSidebar.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from 'react';\nimport { ChevronDown, ChevronRight, Activity, CheckCircle, Clock, Circle } from 'lucide-react';\n\nexport interface AgentStatus {\n  name: string;\n  role: string;\n  status: 'idle' | 'working' | 'complete' | 'error';\n  currentTask?: string;\n  progress?: number;\n}\n\nconst AGENT_CATEGORIES = {\n  'Management & Strategy': [\n    { name: 'Project Manager', role: 'Primary interface & task orchestration' },\n    { name: 'Requirements Analyst', role: 'Requirement elicitation & refinement' },\n    { name: 'System Architect', role: 'Technical architecture & system design' },\n    { name: 'Business Analyst', role: 'Business objectives & value alignment' },\n  ],\n  'Design & Creative': [\n    { name: 'UX Designer', role: 'User experience & interaction design' },\n    { name: 'UI Designer', role: 'Visual aesthetics & component design' },\n    { name: 'Graphics Designer', role: 'Visual assets & multimedia content' },\n  ],\n  'Development & Engineering': [\n    { name: 'Backend Developer', role: 'Server-side logic & APIs' },\n    { name: 'Frontend Developer', role: 'User interface implementation' },\n    { name: 'Database Specialist', role: 'Database design & optimization' },\n    { name: 'DevOps Engineer', role: 'Infrastructure & CI/CD' },\n    { name: 'AI/ML Engineer', role: 'AI model integration & ML pipelines' },\n    { name: 'Data Scientist', role: 'Data analysis & predictive models' },\n    { name: 'Solution Integrator', role: 'System integration & APIs' },\n  ],\n  'Quality Assurance & Security': [\n    { name: 'QA Tester', role: 'Testing & quality assurance' },\n    { name: 'Security Auditor', role: 'Security assessment & compliance' },\n    { name: 'Performance Engineer', role: 'Performance optimization' },\n    { name: 'Accessibility Specialist', role: 'Accessibility compliance' },\n  ],\n  'Documentation & Knowledge': [\n    { name: 'Technical Writer', role: 'Documentation & specifications' },\n    { name: 'Knowledge Base Curator', role: 'RAG system management' },\n    { name: 'Document Analyst', role: 'Document processing & analysis' },\n    { name: 'Audio/Video Analyst', role: 'Media transcription & insights' },\n  ],\n  'System Intelligence': [\n    { name: 'Learning Specialist', role: 'System learning & adaptation' },\n    { name: 'Troubleshooter', role: 'Error diagnosis & debugging' },\n  ],\n};\n\nconst StatusIcon = ({ status }: { status: AgentStatus['status'] }) => {\n  switch (status) {\n    case 'working':\n      return <Activity className=\"w-4 h-4 text-cyan-400 animate-pulse\" />;\n    case 'complete':\n      return <CheckCircle className=\"w-4 h-4 text-green-400\" />;\n    case 'error':\n      return <Circle className=\"w-4 h-4 text-red-400\" />;\n    default:\n      return <Clock className=\"w-4 h-4 text-neutral-600\" />;\n  }\n};\n\nexport function AgentSidebar({ \n  agentStatuses = {} \n}: { \n  agentStatuses?: Record<string, AgentStatus> \n}) {\n  const [expandedCategories, setExpandedCategories] = useState<Set<string>>(\n    new Set(['Management & Strategy', 'Development & Engineering'])\n  );\n\n  const toggleCategory = (category: string) => {\n    const newExpanded = new Set(expandedCategories);\n    if (newExpanded.has(category)) {\n      newExpanded.delete(category);\n    } else {\n      newExpanded.add(category);\n    }\n    setExpandedCategories(newExpanded);\n  };\n\n  const getAgentStatus = (agentName: string): AgentStatus['status'] => {\n    return agentStatuses[agentName]?.status || 'idle';\n  };\n\n  const getAgentTask = (agentName: string): string | undefined => {\n    return agentStatuses[agentName]?.currentTask;\n  };\n\n  const getAgentProgress = (agentName: string): number | undefined => {\n    return agentStatuses[agentName]?.progress;\n  };\n\n  return (\n    <div className=\"w-80 bg-neutral-900/50 backdrop-blur-xl border-r border-neutral-800/50 flex flex-col h-full\">\n      <div className=\"p-4 border-b border-neutral-800/50\">\n        <h2 className=\"text-lg font-semibold text-teal-400\">\n          JAi Cortex Agents\n        </h2>\n        <p className=\"text-xs text-neutral-500 mt-1\">24 Specialist Team Members</p>\n      </div>\n\n      <div className=\"flex-1 overflow-y-auto p-2 space-y-2\">\n        {Object.entries(AGENT_CATEGORIES).map(([category, agents]) => {\n          const isExpanded = expandedCategories.has(category);\n          const activeAgents = agents.filter(a => getAgentStatus(a.name) === 'working').length;\n          \n          return (\n            <div key={category} className=\"rounded-lg overflow-hidden\">\n              <button\n                onClick={() => toggleCategory(category)}\n                className=\"w-full px-3 py-2 bg-neutral-800/50 hover:bg-neutral-800/70 transition-all flex items-center justify-between group\"\n              >\n                <div className=\"flex items-center gap-2\">\n                  {isExpanded ? (\n                    <ChevronDown className=\"w-4 h-4 text-neutral-500\" />\n                  ) : (\n                    <ChevronRight className=\"w-4 h-4 text-neutral-500\" />\n                  )}\n                  <span className=\"text-sm font-medium text-neutral-300\">{category}</span>\n                </div>\n                  {activeAgents > 0 && (\n                  <span className=\"px-2 py-0.5 bg-cyan-500/20 text-cyan-400 text-xs rounded-full\">\n                    {activeAgents} active\n                  </span>\n                )}\n              </button>\n\n              {isExpanded && (\n                <div className=\"bg-neutral-900/30 p-2 space-y-1\">\n                  {agents.map((agent) => {\n                    const status = getAgentStatus(agent.name);\n                    const task = getAgentTask(agent.name);\n                    const progress = getAgentProgress(agent.name);\n\n                    return (\n                      <div\n                        key={agent.name}\n                        className={`p-2 rounded-xl transition-all ${\n                          status === 'working' \n                            ? 'bg-cyan-500/10 border border-cyan-500/30' \n                            : status === 'complete'\n                            ? 'bg-green-500/10 border border-green-500/30'\n                            : 'bg-neutral-900/30 border border-transparent'\n                        }`}\n                      >\n                        <div className=\"flex items-start gap-2\">\n                          <StatusIcon status={status} />\n                          <div className=\"flex-1 min-w-0\">\n                            <div className=\"flex items-center justify-between gap-2\">\n                              <h3 className=\"text-sm font-medium text-neutral-200 truncate\">\n                                {agent.name}\n                              </h3>\n                              {progress !== undefined && (\n                                <span className=\"text-xs text-neutral-500 whitespace-nowrap\">\n                                  {progress}%\n                                </span>\n                              )}\n                            </div>\n                            <p className=\"text-xs text-neutral-600 truncate mt-0.5\">\n                              {task || agent.role}\n                            </p>\n                            {progress !== undefined && (\n                              <div className=\"mt-1.5 h-1 bg-neutral-800 rounded-full overflow-hidden\">\n                                <div \n                                  className=\"h-full bg-gradient-to-r from-pink-400 to-cyan-400 transition-all duration-300\"\n                                  style={{ width: `${progress}%` }}\n                                />\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 402, "column": 0}, "map": {"version":3,"sources":["file:///Users/liverichmedia/Agent%20master%20/genesis-agent/cortex-chat-ui/src/components/StatusBar.tsx"],"sourcesContent":["\"use client\";\n\nimport { Activity, CheckCircle, AlertCircle, Loader2 } from 'lucide-react';\n\nexport interface StatusUpdate {\n  agent: string;\n  status: string;\n  progress?: number;\n  timestamp: number;\n}\n\nexport function StatusBar({ currentStatus }: { currentStatus?: StatusUpdate }) {\n  if (!currentStatus) {\n    return (\n      <div className=\"h-12 bg-neutral-900/80 backdrop-blur-xl border-b border-neutral-800/50 px-6 flex items-center\">\n        <div className=\"flex items-center gap-2 text-neutral-500\">\n          <Activity className=\"w-4 h-4\" />\n          <span className=\"text-sm\">Ready to assist</span>\n        </div>\n      </div>\n    );\n  }\n\n  const getStatusColor = (status: string) => {\n    if (status.includes('complete') || status.includes('success')) {\n      return 'text-green-400';\n    } else if (status.includes('error') || status.includes('fail')) {\n      return 'text-red-400';\n    } else {\n      return 'text-cyan-400';\n    }\n  };\n\n  const getStatusIcon = (status: string) => {\n    if (status.includes('complete') || status.includes('success')) {\n      return <CheckCircle className=\"w-4 h-4\" />;\n    } else if (status.includes('error') || status.includes('fail')) {\n      return <AlertCircle className=\"w-4 h-4\" />;\n    } else {\n      return <Loader2 className=\"w-4 h-4 animate-spin\" />;\n    }\n  };\n\n  return (\n    <div className=\"h-12 bg-neutral-900/80 backdrop-blur-xl border-b border-neutral-800/50 px-6 flex items-center justify-between\">\n      <div className={`flex items-center gap-3 ${getStatusColor(currentStatus.status)}`}>\n        {getStatusIcon(currentStatus.status)}\n        <div className=\"flex items-center gap-2\">\n          <span className=\"font-medium\">{currentStatus.agent}</span>\n          <span className=\"text-neutral-600\">•</span>\n          <span className=\"text-sm\">{currentStatus.status}</span>\n        </div>\n      </div>\n\n      {currentStatus.progress !== undefined && (\n        <div className=\"flex items-center gap-3\">\n          <div className=\"w-48 h-2 bg-neutral-800 rounded-full overflow-hidden\">\n            <div \n              className=\"h-full bg-gradient-to-r from-pink-400 to-cyan-400 transition-all duration-300\"\n              style={{ width: `${currentStatus.progress}%` }}\n            />\n          </div>\n          <span className={`text-sm font-medium ${getStatusColor(currentStatus.status)}`}>\n            {currentStatus.progress}%\n          </span>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AAAA;AAAA;AAAA;AAFA;;;AAWO,SAAS,UAAU,EAAE,aAAa,EAAoC;IAC3E,IAAI,CAAC,eAAe;QAClB,qBACE,6SAAC;YAAI,WAAU;sBACb,cAAA,6SAAC;gBAAI,WAAU;;kCACb,6SAAC,qRAAQ;wBAAC,WAAU;;;;;;kCACpB,6SAAC;wBAAK,WAAU;kCAAU;;;;;;;;;;;;;;;;;IAIlC;IAEA,MAAM,iBAAiB,CAAC;QACtB,IAAI,OAAO,QAAQ,CAAC,eAAe,OAAO,QAAQ,CAAC,YAAY;YAC7D,OAAO;QACT,OAAO,IAAI,OAAO,QAAQ,CAAC,YAAY,OAAO,QAAQ,CAAC,SAAS;YAC9D,OAAO;QACT,OAAO;YACL,OAAO;QACT;IACF;IAEA,MAAM,gBAAgB,CAAC;QACrB,IAAI,OAAO,QAAQ,CAAC,eAAe,OAAO,QAAQ,CAAC,YAAY;YAC7D,qBAAO,6SAAC,ySAAW;gBAAC,WAAU;;;;;;QAChC,OAAO,IAAI,OAAO,QAAQ,CAAC,YAAY,OAAO,QAAQ,CAAC,SAAS;YAC9D,qBAAO,6SAAC,kSAAW;gBAAC,WAAU;;;;;;QAChC,OAAO;YACL,qBAAO,6SAAC,2RAAO;gBAAC,WAAU;;;;;;QAC5B;IACF;IAEA,qBACE,6SAAC;QAAI,WAAU;;0BACb,6SAAC;gBAAI,WAAW,CAAC,wBAAwB,EAAE,eAAe,cAAc,MAAM,GAAG;;oBAC9E,cAAc,cAAc,MAAM;kCACnC,6SAAC;wBAAI,WAAU;;0CACb,6SAAC;gCAAK,WAAU;0CAAe,cAAc,KAAK;;;;;;0CAClD,6SAAC;gCAAK,WAAU;0CAAmB;;;;;;0CACnC,6SAAC;gCAAK,WAAU;0CAAW,cAAc,MAAM;;;;;;;;;;;;;;;;;;YAIlD,cAAc,QAAQ,KAAK,2BAC1B,6SAAC;gBAAI,WAAU;;kCACb,6SAAC;wBAAI,WAAU;kCACb,cAAA,6SAAC;4BACC,WAAU;4BACV,OAAO;gCAAE,OAAO,GAAG,cAAc,QAAQ,CAAC,CAAC,CAAC;4BAAC;;;;;;;;;;;kCAGjD,6SAAC;wBAAK,WAAW,CAAC,oBAAoB,EAAE,eAAe,cAAc,MAAM,GAAG;;4BAC3E,cAAc,QAAQ;4BAAC;;;;;;;;;;;;;;;;;;;AAMpC","debugId":null}},
    {"offset": {"line": 578, "column": 0}, "map": {"version":3,"sources":["file:///Users/liverichmedia/Agent%20master%20/genesis-agent/cortex-chat-ui/src/components/TracePanel.tsx"],"sourcesContent":["\"use client\";\n\nimport { ArrowRight, FileText, Code, Database, AlertCircle, CheckCircle, Clock } from 'lucide-react';\nimport { useEffect, useRef } from 'react';\n\nexport interface TraceEvent {\n  id: string;\n  timestamp: number;\n  type: 'delegation' | 'tool_use' | 'artifact' | 'error' | 'complete' | 'status' | 'response';\n  fromAgent?: string;\n  toAgent?: string;\n  action: string;\n  details?: string;\n  artifact?: {\n    type: string;\n    name: string;\n  };\n}\n\nconst EventIcon = ({ type }: { type: TraceEvent['type'] }) => {\n  switch (type) {\n    case 'delegation':\n      return <ArrowRight className=\"w-4 h-4 text-cyan-400\" />;\n    case 'tool_use':\n      return <Code className=\"w-4 h-4 text-purple-400\" />;\n    case 'artifact':\n      return <FileText className=\"w-4 h-4 text-yellow-400\" />;\n    case 'error':\n      return <AlertCircle className=\"w-4 h-4 text-red-400\" />;\n    case 'complete':\n      return <CheckCircle className=\"w-4 h-4 text-green-400\" />;\n    case 'status':\n      return <Clock className=\"w-4 h-4 text-teal-400\" />;\n    case 'response':\n      return <FileText className=\"w-4 h-4 text-blue-400\" />;\n    default:\n      return <Clock className=\"w-4 h-4 text-neutral-500\" />;\n  }\n};\n\nconst EventTypeLabel = ({ type }: { type: TraceEvent['type'] }) => {\n  const labels = {\n    delegation: { text: 'Delegated', color: 'bg-cyan-500/20 text-cyan-400' },\n    tool_use: { text: 'Tool Used', color: 'bg-purple-500/20 text-purple-400' },\n    artifact: { text: 'Artifact', color: 'bg-yellow-500/20 text-yellow-400' },\n    error: { text: 'Error', color: 'bg-red-500/20 text-red-400' },\n    complete: { text: 'Complete', color: 'bg-green-500/20 text-green-400' },\n    status: { text: 'Status', color: 'bg-teal-500/20 text-teal-400' },\n    response: { text: 'Response', color: 'bg-blue-500/20 text-blue-400' },\n  };\n\n  const label = labels[type] || { text: 'Event', color: 'bg-gray-500/20 text-gray-400' };\n\n  return (\n    <span className={`px-2 py-0.5 rounded text-xs font-medium ${label.color}`}>\n      {label.text}\n    </span>\n  );\n};\n\nfunction formatTime(timestamp: number): string {\n  const date = new Date(timestamp);\n  return date.toLocaleTimeString('en-US', { \n    hour12: false, \n    hour: '2-digit', \n    minute: '2-digit', \n    second: '2-digit',\n    fractionalSecondDigits: 3 \n  });\n}\n\nexport function TracePanel({ events }: { events: TraceEvent[] }) {\n  const scrollRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\n    }\n  }, [events]);\n\n  return (\n    <div className=\"w-96 bg-neutral-900/50 backdrop-blur-xl border-l border-neutral-800/50 flex flex-col h-full\">\n      <div className=\"p-4 border-b border-neutral-800/50\">\n        <h2 className=\"text-lg font-semibold text-teal-400\">\n          Agent Trace\n        </h2>\n        <p className=\"text-xs text-neutral-500 mt-1\">Real-time collaboration flow</p>\n      </div>\n\n      <div ref={scrollRef} className=\"flex-1 overflow-y-auto p-4 space-y-3\">\n        {events.length === 0 ? (\n          <div className=\"flex flex-col items-center justify-center h-full text-neutral-500\">\n            <Clock className=\"w-12 h-12 mb-2 opacity-50\" />\n            <p className=\"text-sm\">No activity yet</p>\n            <p className=\"text-xs text-neutral-600 mt-1\">Agent collaboration will appear here</p>\n          </div>\n        ) : (\n          events.map((event) => (\n            <div\n              key={event.id}\n              className=\"bg-neutral-800/50 rounded-lg p-3 border border-neutral-700/50 hover:border-neutral-600/50 transition-all\"\n            >\n              <div className=\"flex items-start gap-2\">\n                <div className=\"mt-0.5\">\n                  <EventIcon type={event.type} />\n                </div>\n                <div className=\"flex-1 min-w-0\">\n                  <div className=\"flex items-center gap-2 mb-1\">\n                    <EventTypeLabel type={event.type} />\n                    <span className=\"text-xs text-neutral-500\">\n                      {formatTime(event.timestamp)}\n                    </span>\n                  </div>\n\n                  {event.fromAgent && event.toAgent && event.type === 'delegation' && (\n                    <div className=\"flex items-center gap-2 text-sm mb-1\">\n                      <span className=\"font-medium text-neutral-300\">{event.fromAgent}</span>\n                      <ArrowRight className=\"w-3 h-3 text-neutral-500\" />\n                      <span className=\"font-medium text-neutral-300\">{event.toAgent}</span>\n                    </div>\n                  )}\n\n                  {event.fromAgent && !event.toAgent && (\n                    <div className=\"text-sm font-medium text-neutral-300 mb-1\">\n                      {event.fromAgent}\n                    </div>\n                  )}\n\n                  <p className=\"text-sm text-neutral-400\">{event.action}</p>\n\n                  {event.details && (\n                    <p className=\"text-xs text-neutral-500 mt-1 font-mono bg-neutral-950/50 p-1.5 rounded break-all\">\n                      {event.details}\n                    </p>\n                  )}\n\n                  {event.artifact && (\n                    <div className=\"mt-2 flex items-center gap-2 bg-yellow-500/10 border border-yellow-500/30 rounded p-2\">\n                      <Database className=\"w-4 h-4 text-yellow-400\" />\n                      <div className=\"flex-1 min-w-0\">\n                        <p className=\"text-xs text-yellow-400 font-medium truncate\">\n                          {event.artifact.name}\n                        </p>\n                        <p className=\"text-xs text-neutral-500\">\n                          {event.artifact.type}\n                        </p>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 964, "column": 0}, "map": {"version":3,"sources":["file:///Users/liverichmedia/Agent%20master%20/genesis-agent/cortex-chat-ui/src/app/chat/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useRef, useEffect } from 'react';\nimport { Send, Mic, MicOff } from 'lucide-react';\nimport { AgentSidebar, AgentStatus } from '@/components/AgentSidebar';\nimport { StatusBar, StatusUpdate } from '@/components/StatusBar';\nimport { TracePanel, TraceEvent } from '@/components/TracePanel';\n\ninterface Message {\n  id: string;\n  role: 'user' | 'assistant';\n  content: string;\n  timestamp: number;\n  agent?: string;\n}\n\nexport default function ChatPage() {\n  const [messages, setMessages] = useState<Message[]>([\n    {\n      id: '1',\n      role: 'assistant',\n      content: \"Hello! I'm JAi Cortex - your 24-agent development team. I have specialists for every aspect of software development. What would you like to build today?\",\n      timestamp: Date.now(),\n      agent: 'Project Manager'\n    }\n  ]);\n  \n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [agentStatuses, setAgentStatuses] = useState<Record<string, AgentStatus>>({});\n  const [currentStatus, setCurrentStatus] = useState<StatusUpdate>();\n  const [traceEvents, setTraceEvents] = useState<TraceEvent[]>([]);\n  const [isRecording, setIsRecording] = useState(false);\n  \n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleSend = async () => {\n    if (!input.trim() || isLoading) return;\n\n    const startTime = Date.now(); // Start timer\n\n    const userMessage: Message = {\n      id: Date.now().toString(),\n      role: 'user',\n      content: input,\n      timestamp: Date.now()\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    const messageToSend = input;\n    setInput('');\n    setIsLoading(true);\n\n    // Add loading indicator message\n    const loadingId = 'loading-' + Date.now();\n    setMessages(prev => [...prev, {\n      id: loadingId,\n      role: 'assistant',\n      content: '⏳ JAi Cortex is thinking...',\n      timestamp: Date.now()\n    }]);\n\n    // Add trace for user message\n    setTraceEvents(prev => [...prev, {\n      id: `user-msg-${Date.now()}-${Math.random()}`,\n      timestamp: Date.now(),\n      type: 'message',\n      fromAgent: 'User',\n      action: 'Message sent',\n      details: messageToSend.substring(0, 100)\n    }]);\n\n    try {\n      // Use local JAi Cortex OS backend with complete ADK system\n      const response = await fetch('http://localhost:8000/api/chat', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          message: messageToSend,\n          session_id: 'main-session',  // Fixed session ID for conversation continuity\n          user_id: 'default'\n        })\n      });\n\n      const data = await response.json();\n      const responseTime = ((Date.now() - startTime) / 1000).toFixed(2); // Calculate response time in seconds\n      \n      // Add tool calls to trace (if any)\n      if (data.tool_calls && data.tool_calls.length > 0) {\n        data.tool_calls.forEach((toolCall: { name: string; args: Record<string, unknown> }) => {\n          setTraceEvents(prev => [...prev, {\n            id: `tool-${Date.now()}-${Math.random()}`,\n            timestamp: Date.now(),\n            type: 'tool_use',\n            fromAgent: 'JAi Cortex',\n            action: `Tool: ${toolCall.name}`,\n            details: JSON.stringify(toolCall.args, null, 2)\n          }]);\n        });\n      }\n      \n      // ALWAYS add response trace with timing\n      setTraceEvents(prev => [...prev, {\n        id: `response-${Date.now()}-${Math.random()}`,\n        timestamp: Date.now(),\n        type: 'response',\n        fromAgent: 'JAi Cortex',\n        action: `Response generated in ${responseTime}s`,\n        details: data.response.substring(0, 150) + (data.response.length > 150 ? '...' : '')\n      }]);\n      \n      // Remove loading message and add real response\n      setMessages(prev => {\n        const filtered = prev.filter(m => m.id !== loadingId);\n        return [...filtered, {\n          id: (Date.now() + 1).toString(),\n          role: 'assistant',\n          content: data.response,\n          timestamp: Date.now()\n        }];\n      });\n\n      setIsLoading(false);\n    } catch (error) {\n      console.error('Error:', error);\n      const errorTime = ((Date.now() - startTime) / 1000).toFixed(2);\n      \n      // Remove loading message and show error\n      setMessages(prev => {\n        const filtered = prev.filter(m => m.id !== loadingId);\n        return [...filtered, {\n          id: (Date.now() + 1).toString(),\n          role: 'assistant',\n          content: '❌ Sorry, I encountered an error. Please try again.',\n          timestamp: Date.now()\n        }];\n      });\n      \n      // Add error trace with timing\n      setTraceEvents(prev => [...prev, {\n        id: `trace-error-${Date.now()}-${Math.random()}`,\n        timestamp: Date.now(),\n        type: 'error',\n        fromAgent: 'System',\n        action: `Request failed after ${errorTime}s`,\n        details: error instanceof Error ? error.message : 'Unknown error'\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const toggleRecording = () => {\n    setIsRecording(!isRecording);\n    // Voice recording logic would go here\n  };\n\n  return (\n    <div className=\"flex h-screen w-full bg-neutral-950 relative overflow-hidden\">\n      {/* Animated blurred orbs in background */}\n      <div className=\"absolute inset-0 pointer-events-none\">\n        {/* Teal orb */}\n        <div className=\"absolute w-96 h-96 bg-teal-500/20 rounded-full blur-3xl animate-float-slow top-0 -left-20\" />\n        <div className=\"absolute w-80 h-80 bg-teal-400/15 rounded-full blur-3xl animate-float-medium bottom-20 right-10\" />\n        \n        {/* Blue orbs */}\n        <div className=\"absolute w-72 h-72 bg-sky-400/20 rounded-full blur-3xl animate-float-medium top-40 right-0\" />\n        <div className=\"absolute w-64 h-64 bg-blue-500/15 rounded-full blur-3xl animate-float-slow bottom-0 left-1/3\" />\n        \n        {/* Pink orbs */}\n        <div className=\"absolute w-60 h-60 bg-pink-400/10 rounded-full blur-3xl animate-float-fast top-1/3 left-1/4\" />\n        <div className=\"absolute w-56 h-56 bg-pink-500/15 rounded-full blur-3xl animate-float-medium bottom-40 right-1/4\" />\n      </div>\n      \n      {/* Agent Sidebar */}\n      <AgentSidebar agentStatuses={agentStatuses} />\n\n      {/* Main Chat Area */}\n      <div className=\"flex-1 flex flex-col\">\n        {/* Status Bar */}\n        <StatusBar currentStatus={currentStatus} />\n\n        {/* Messages */}\n        <div className=\"flex-1 overflow-y-auto p-6 space-y-4\">\n          {messages.map((message) => (\n            <div\n              key={message.id}\n              className={`flex ${message.role === 'user' ? 'justify-end' : 'justify-start'}`}\n            >\n              <div\n                className={`max-w-xl rounded-2xl px-4 py-3 ${\n                  message.role === 'user'\n                    ? 'bg-teal-500/20 border border-teal-400/40'\n                    : 'bg-neutral-800/50 border border-neutral-700/50'\n                }`}\n              >\n                {message.agent && (\n                  <div className=\"text-xs font-medium text-cyan-400 mb-2\">\n                    {message.agent}\n                  </div>\n                )}\n                <p className=\"text-gray-100 whitespace-pre-wrap\">{message.content}</p>\n                <div className=\"text-xs text-gray-500 mt-2\" suppressHydrationWarning>\n                  {new Date(message.timestamp).toLocaleTimeString()}\n                </div>\n              </div>\n            </div>\n          ))}\n          <div ref={messagesEndRef} />\n        </div>\n\n        {/* Input Area */}\n        <div className=\"border-t border-neutral-800/50 bg-neutral-900/80 backdrop-blur-xl p-4\">\n          <div className=\"flex items-end gap-3\">\n            <button\n              onClick={toggleRecording}\n              className={`p-3 rounded-xl transition-all ${\n                isRecording\n                  ? 'bg-red-500 hover:bg-red-600'\n                  : 'bg-neutral-800 hover:bg-neutral-700'\n              }`}\n            >\n              {isRecording ? (\n                <MicOff className=\"w-5 h-5 text-white\" />\n              ) : (\n                <Mic className=\"w-5 h-5 text-white\" />\n              )}\n            </button>\n\n            <div className=\"flex-1\">\n              <textarea\n                value={input}\n                onChange={(e) => setInput(e.target.value)}\n                onKeyDown={(e) => {\n                  if (e.key === 'Enter' && !e.shiftKey) {\n                    e.preventDefault();\n                    handleSend();\n                  }\n                }}\n                placeholder=\"Describe what you want to build...\"\n                className=\"w-full bg-neutral-900/50 border border-neutral-800/50 rounded-xl px-4 py-3 text-gray-100 placeholder-neutral-500 focus:outline-none focus:border-cyan-400/50 resize-none\"\n                rows={1}\n                style={{ minHeight: '48px', maxHeight: '120px' }}\n              />\n            </div>\n\n            <button\n              onClick={handleSend}\n              disabled={isLoading || !input.trim()}\n              className=\"p-3 bg-sky-400 hover:bg-sky-500 rounded-xl transition-all disabled:opacity-50 disabled:cursor-not-allowed shadow-lg shadow-sky-500/20\"\n            >\n              <Send className=\"w-5 h-5 text-white\" />\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Trace Panel */}\n      <TracePanel events={traceEvents} />\n      \n      {/* Floating orb animations */}\n      <style jsx>{`\n        @keyframes float-slow {\n          0%, 100% {\n            transform: translate(0, 0) scale(1);\n          }\n          33% {\n            transform: translate(30px, -40px) scale(1.1);\n          }\n          66% {\n            transform: translate(-20px, 40px) scale(0.9);\n          }\n        }\n        \n        @keyframes float-medium {\n          0%, 100% {\n            transform: translate(0, 0) scale(1);\n          }\n          50% {\n            transform: translate(-40px, -50px) scale(1.15);\n          }\n        }\n        \n        @keyframes float-fast {\n          0%, 100% {\n            transform: translate(0, 0) scale(1);\n          }\n          25% {\n            transform: translate(50px, 30px) scale(0.95);\n          }\n          75% {\n            transform: translate(-30px, -40px) scale(1.05);\n          }\n        }\n        \n        .animate-float-slow {\n          animation: float-slow 20s ease-in-out infinite;\n        }\n        \n        .animate-float-medium {\n          animation: float-medium 15s ease-in-out infinite;\n        }\n        \n        .animate-float-fast {\n          animation: float-fast 12s ease-in-out infinite;\n        }\n      `}</style>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}